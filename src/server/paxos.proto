syntax = "proto3";

option go_package = "dp_project/server;paxos";

package paxos;

// PaxosService defines the RPC methods for the Paxos consensus algorithm.
service PaxosService {
  // Prepare initiates the prepare phase for a Paxos instance.
  rpc Prepare(PrepareRequest) returns (PrepareReply);
  
  // Accept sends an accept request for a Paxos instance.
  rpc Accept(AcceptRequest) returns (AcceptReply);
}

// PrepareRequest is sent by a proposer to request promises from acceptors.
message PrepareRequest {
  int32 instance_id = 1;  // The Paxos instance (or log index)
  int32 round = 2;        // The round (ballot) number of the proposal
}

// PrepareReply is the response from an acceptor to a prepare request.
message PrepareReply {
  bool promised = 1;      // True if the acceptor promises not to accept lower rounds
  int32 accepted_round = 2;  // The round number of any previously accepted proposal (if any)
  string accepted_value = 3; // The value of the previously accepted proposal (if any)
}

// AcceptRequest is sent by a proposer after the prepare phase to propose a value.
message AcceptRequest {
  int32 instance_id = 1;  // The Paxos instance (or log index)
  int32 round = 2;        // The round (ballot) number of the proposal
  string value = 3;       // The value being proposed
}

// AcceptReply is the response from an acceptor to an accept request.
message AcceptReply {
  bool accepted = 1;      // True if the acceptor accepted the proposal
}
